[include macro_aliases.cfg]
[include macro_parking.cfg]
[include macro_smart_home.cfg]

#####################################################################
#   Macros
#####################################################################

[gcode_shell_command backup_cfg]
command: sh /home/biqu/autocommit.sh
timeout: 30
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    CG28
    QUAD_GANTRY_LEVEL
    CG28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_restore_idle_timeout: 0
gcode:
  SET_FILAMENT_SENSOR SENSOR=runout_sensor ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0
  PAUSE_BASE

[gcode_macro RESUME]
description: RESUME the actual running print
rename_existing: RESUME_BASE
variable_restore_idle_timeout: 0
gcode:
  SET_FILAMENT_SENSOR SENSOR=runout_sensor ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1
  RESUME_BASE

[gcode_macro PRINT_START]
# For setting the parameters as persistent variables so they can be referenced in PRINT_START2
variable_bedtemp: 0
variable_hotendtemp: 0
variable_chambertemp: 0
gcode:      
    # Parameters
    {% set bed = params.BED|int %}
    {% set hotend = params.HOTEND|int %}
    {% set chamber = params.CHAMBER|default(0)|int %}

#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
    G32                            ; home all axes
    G90                            ; absolute positioning
    SMART_PARK
    
    M104 S145
    M140 S{bed}

    M109 S145
    clean_nozzle
    
    M190 S{bed}
    
    BED_MESH_CALIBRATE

    M109 S{hotend}
    clean_nozzle
    
    LINE_PURGE
    
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END